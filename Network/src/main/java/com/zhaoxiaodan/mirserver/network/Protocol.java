package com.zhaoxiaodan.mirserver.network;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by liangwei on 16/2/17.
 */
public enum Protocol {

	// For Login Process
	CM_PROTOCOL(2000),
	Login(2001),
	NewUser(2002),
	CM_CHANGEPASSWORD(2003),
	CM_UPDATEUSER(2004),
	SelectServer(104),

	SM_CERTIFICATION_FAIL(501),
	SM_ID_NOTFOUND(502),
	SM_PASSWD_FAIL(503),
	SM_NEWID_SUCCESS(504),
	SM_NEWID_FAIL(505),
	LoginSuccSelectServer(529),
	SelectServerOk(530),

	// For Select Character Process
	CM_QUERYCHR(100),
	CM_NEWCHR(101),
	CM_DELCHR(102),
	CM_SELCHR(103),

	SM_QUERYCHR(520),
	SM_NEWCHR_SUCCESS(521),
	SM_NEWCHR_FAIL(522),
	SM_DELCHR_SUCCESS(523),
	SM_DELCHR_FAIL(524),
	SM_STARTPLAY(525),
	SM_STARTFAIL(526),
	SM_QUERYCHR_FAIL(527),

	// For Game Gate
	GM_OPEN(1),
	GM_CLOSE(2),
	GM_CHECKSERVER(3),            // Send check signal to Server
	GM_CHECKCLIENT(4),            // Send check signal to Client
	GM_DATA(5),
	GM_SERVERUSERINDEX(6),
	GM_RECEIVE_OK(7),
	GM_TEST(20),

	// For game process
	// Client To Server Commands
	CM_QUERYUSERNAME(80),
	CM_QUERYBAGITEMS(81),

	CM_DROPITEM(1000),
	CM_PICKUP(1001),
	CM_TAKEONITEM(1003),
	CM_TAKEOFFITEM(1004),
	CM_BUTCH(1007),
	CM_MAGICKEYCHANGE(1008),
	CM_EAT(1006),
	CM_TURN(3010),
	CM_WALK(3011),
	CM_SITDOWN(3012),
	CM_RUN(3013),
	CM_HIT(3014),
	CM_HEAVYHIT(3015),
	CM_BIGHIT(3016),
	CM_SPELL(3017),
	CM_POWERHIT(3018),
	CM_LONGHIT(3019),
	CM_WIDEHIT(3024),
	CM_FIREHIT(3025),
	CM_SAY(3030),
	CM_RIDE(3031),

	// Server to Client Commands
	SM_RUSH(6),
	SM_FIREHIT(8),
	SM_BACKSTEP(9),
	SM_TURN(10),
	SM_WALK(11),
	SM_SITDOWN(12),
	SM_RUN(13),
	SM_HIT(14),
	SM_SPELL(17),
	SM_POWERHIT(18),
	SM_LONGHIT(19),
	SM_DIGUP(20),
	SM_DIGDOWN(21),
	SM_FLYAXE(22),
	SM_LIGHTING(23),
	SM_WIDEHIT(24),
	SM_DISAPPEAR(30),
	SM_STRUCK(31),
	SM_DEATH(32),
	SM_SKELETON(33),
	SM_NOWDEATH(34),

	SM_HEAR(40),
	SM_FEATURECHANGED(41),
	SM_USERNAME(42),
	SM_WINEXP(44),
	SM_LEVELUP(45),
	SM_DAYCHANGING(46),
	SM_LOGON(50),
	SM_NEWMAP(51),
	SM_ABILITY(52),
	SM_HEALTHSPELLCHANGED(53),
	SM_MAPDESCRIPTION(54),
	SM_SPELL2(117),

	SM_SYSMESSAGE(100),
	SM_GROUPMESSAGE(101),
	SM_CRY(102),
	SM_WHISPER(103),
	SM_GUILDMESSAGE(104),

	SM_ADDITEM(200),
	SM_BAGITEMS(201),
	SM_ADDMAGIC(210),
	SM_SENDMYMAGIC(211),

	SM_DROPITEM_SUCCESS(600),
	SM_DROPITEM_FAIL(601),

	SM_ITEMSHOW(610),
	SM_ITEMHIDE(611),
	SM_DOOROPEN(612),
	SM_TAKEON_OK(615),
	SM_TAKEON_FAIL(616),
	SM_TAKEOFF_OK(619),
	SM_TAKEOFF_FAIL(620),
	SM_SENDUSEITEMS(621),
	SM_WEIGHTCHANGED(622),
	SM_CLEAROBJECTS(633),
	SM_CHANGEMAP(634),
	SM_EAT_OK(635),
	SM_EAT_FAIL(636),
	SM_BUTCH(637),
	SM_MAGICFIRE(638),
	SM_MAGIC_LVEXP(640),
	SM_DURACHANGE(642),
	SM_MERCHANTSAY(643),
	SM_GOLDCHANGED(653),
	SM_CHANGELIGHT(654),
	SM_CHANGENAMECOLOR(656),
	SM_CHARSTATUSCHANGED(657),

	SM_SUBABILITY(752),

	SM_SHOWEVENT(804),
	SM_HIDEEVENT(805),

	SM_OPENHEALTH(1100),
	SM_CLOSEHEALTH(1101),
	SM_CHANGEFACE(1104),

	SM_ITEMUPDATE(1500),
	SM_MONSTERSAY(1501),

	// Server to Server Commands
	RM_TURN(10001),
	RM_WALK(10002),
	RM_RUN(10003),
	RM_HIT(10004),
	RM_SPELL(10007),
	RM_SPELL2(10008),
	RM_POWERHIT(10009),
	RM_LONGHIT(10011),
	RM_WIDEHIT(10012),
	RM_PUSH(10013),
	RM_FIREHIT(10014),
	RM_RUSH(10015),
	RM_STRUCK(10020),
	RM_DEATH(10021),
	RM_DISAPPEAR(10022),
	RM_MAGSTRUCK(10025),
	RM_STRUCK_MAG(10027),
	RM_MAGSTRUCK_MINE(10028),
	RM_MAGHEALING(10026),
	RM_HEAR(10030),
	RM_WHISPER(10031),
	RM_CRY(10032),
	RM_RIDE(10033),
	RM_WINEXP(10044),
	RM_USERNAME(10043),
	RM_LEVELUP(10045),
	RM_CHANGENAMECOLOR(10046),

	RM_LOGON(10050),
	RM_ABILITY(10051),
	RM_HEALTHSPELLCHANGED(10052),
	RM_DAYCHANGING(10053),

	RM_SYSMESSAGE(10100),
	RM_GROUPMESSAGE(10102),
	RM_SYSMESSAGE2(10103),
	RM_GUILDMESSAGE(10104),
	RM_ITEMSHOW(10110),
	RM_ITEMHIDE(10111),
	RM_DOOROPEN(10112),
	RM_SENDUSEITEMS(10114),
	RM_WEIGHTCHANGED(10115),
	RM_FEATURECHANGED(10116),
	RM_CLEAROBJECTS(10117),
	RM_CHANGEMAP(10118),
	RM_BUTCH(10119),
	RM_MAGICFIRE(10120),
	RM_SENDMYMAGIC(10122),
	RM_MAGIC_LVEXP(10123),
	RM_SKELETON(10024),
	RM_DURACHANGE(10125),
	RM_MERCHANTSAY(10126),
	RM_GOLDCHANGED(10136),
	RM_CHANGELIGHT(10137),
	RM_CHARSTATUSCHANGED(10139),
	RM_DELAYMAGIC(10154),

	RM_DIGUP(10200),
	RM_DIGDOWN(10201),
	RM_FLYAXE(10202),
	RM_LIGHTING(10204),

	RM_SUBABILITY(10302),
	RM_TRANSPARENT(10308),

	RM_SPACEMOVE_SHOW(10331),
	RM_HIDEEVENT(10333),
	RM_SHOWEVENT(10334),
	RM_ZEN_BEE(10337),

	RM_OPENHEALTH(10410),
	RM_CLOSEHEALTH(10411),
	RM_DOOPENHEALTH(10412),
	RM_CHANGEFACE(10415),

	RM_ITEMUPDATE(11000),
	RM_MONSTERSAY(11001),
	RM_MAKESLAVE(11002),

	// For DB Server
	DB_LOADHUMANRCD(100),
	DB_SAVEHUMANRCD(101),
	DB_MAKEITEMRCD(150),
	DB_ITEMTHROW(151),
	DB_MAKEITEMRCD2(152),

	DBR_LOADHUMANRCD(1100),
	DBR_LOADHUMANRCD2(1101),
	DBR_MAKEITEMRCD(1500),
	DBR_MAKEITEMRCD2(1501),

	DBR_FAIL(2000);

	private static final Map<Short, Protocol> map;

	static {
		map = new HashMap<>();
		for (Protocol p : Protocol.values()) {
			if(map.containsKey(p.id)) {
				System.out.println(("Protocol id " + p.id + " exsit by " + map.get(p.id).name()));
			}else{
				map.put(p.id, p);
			}
		}
	}

	public static String getName(short id) {
		if (map.containsKey(id))
			return map.get(id).name();
		else
			return null;
	}

	public final short id;

	Protocol(int id) {
		this.id = (short)id;
	}


}
